import React, { useState } from 'react';
import { User, FileText, Download, Loader2, AlertCircle } from 'lucide-react';
import PersonaGenerator from './components/PersonaGenerator';
import PersonaDisplay from './components/PersonaDisplay';
import { UserPersona } from './types/persona';

function App() {
  const [persona, setPersona] = useState<UserPersona | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handlePersonaGenerated = (newPersona: UserPersona) => {
    setPersona(newPersona);
    setError(null);
  };

  const handleError = (errorMessage: string) => {
    setError(errorMessage);
    setPersona(null);
  };

  const downloadPersona = () => {
    if (!persona) return;

    const content = `Reddit User Persona Analysis
Generated on: ${new Date().toLocaleDateString()}

=== USER PERSONA ===

Username: ${persona.username}
Profile URL: ${persona.profileUrl}

DEMOGRAPHICS:
${persona.demographics.map(item => `• ${item.characteristic}: ${item.value}${item.evidence ? ` (Evidence: ${item.evidence})` : ''}`).join('\n')}

INTERESTS & HOBBIES:
${persona.interests.map(item => `• ${item.characteristic}: ${item.value}${item.evidence ? ` (Evidence: ${item.evidence})` : ''}`).join('\n')}

PERSONALITY TRAITS:
${persona.personality.map(item => `• ${item.characteristic}: ${item.value}${item.evidence ? ` (Evidence: ${item.evidence})` : ''}`).join('\n')}

BEHAVIORAL PATTERNS:
${persona.behavior.map(item => `• ${item.characteristic}: ${item.value}${item.evidence ? ` (Evidence: ${item.evidence})` : ''}`).join('\n')}

COMMUNICATION STYLE:
${persona.communication.map(item => `• ${item.characteristic}: ${item.value}${item.evidence ? ` (Evidence: ${item.evidence})` : ''}`).join('\n')}

=== ANALYSIS SUMMARY ===
Total Posts Analyzed: ${persona.metadata.totalPosts}
Total Comments Analyzed: ${persona.metadata.totalComments}
Subreddits Active In: ${persona.metadata.subreddits.join(', ')}
Analysis Date: ${persona.metadata.analysisDate}

=== SUPPORTING EVIDENCE ===
This persona was generated by analyzing the user's Reddit activity including posts, comments, and engagement patterns across various subreddits.
`;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `reddit-persona-${persona.username}-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 to-red-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex items-center justify-center mb-4">
            <User className="w-12 h-12 text-orange-600 mr-3" />
            <h1 className="text-4xl font-bold text-gray-900">Reddit User Persona Generator</h1>
          </div>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Analyze Reddit user profiles to generate comprehensive personas based on their posts, comments, and activity patterns
          </p>
        </div>

        {/* Main Content */}
        <div className="max-w-6xl mx-auto">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Input Section */}
            <div className="bg-white rounded-xl shadow-lg p-6">
              <div className="flex items-center mb-6">
                <FileText className="w-6 h-6 text-orange-600 mr-2" />
                <h2 className="text-2xl font-semibold text-gray-900">Generate Persona</h2>
              </div>
              
              <PersonaGenerator
                onPersonaGenerated={handlePersonaGenerated}
                onError={handleError}
                isLoading={isLoading}
                setIsLoading={setIsLoading}
              />

              {error && (
                <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg">
                  <div className="flex items-center">
                    <AlertCircle className="w-5 h-5 text-red-600 mr-2" />
                    <p className="text-red-800">{error}</p>
                  </div>
                </div>
              )}

              {isLoading && (
                <div className="mt-6 p-6 bg-blue-50 border border-blue-200 rounded-lg">
                  <div className="flex items-center justify-center">
                    <Loader2 className="w-6 h-6 text-blue-600 animate-spin mr-3" />
                    <p className="text-blue-800">Analyzing Reddit profile and generating persona...</p>
                  </div>
                </div>
              )}
            </div>

            {/* Results Section */}
            <div className="bg-white rounded-xl shadow-lg p-6">
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center">
                  <User className="w-6 h-6 text-orange-600 mr-2" />
                  <h2 className="text-2xl font-semibold text-gray-900">User Persona</h2>
                </div>
                {persona && (
                  <button
                    onClick={downloadPersona}
                    className="flex items-center px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors"
                  >
                    <Download className="w-4 h-4 mr-2" />
                    Download
                  </button>
                )}
              </div>

              {persona ? (
                <PersonaDisplay persona={persona} />
              ) : (
                <div className="text-center py-12">
                  <User className="w-16 h-16 text-gray-300 mx-auto mb-4" />
                  <p className="text-gray-500 text-lg">
                    Enter a Reddit profile URL to generate a user persona
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="mt-16 text-center">
          <p className="text-gray-500">
            This tool analyzes public Reddit data to create user personas for research and understanding purposes.
          </p>
        </div>
      </div>
    </div>
  );
}

export default App;